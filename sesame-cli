#!/usr/bin/env bash

usage() {
cat << EOS
Sesame CLI

command-line interface for OpenRDF Sesame triplestore

Usage:
  $ sesame-cli [options] <host> <command> [arguments]

Options:
  -h
    display this help message
  -i
    include inferences
  -r <repository>
    select repository

Commands:
  list <repos|graphs|triples>
    display all repositories, contexts or triples
  query [query]
    perform SPARQL query (optionally read from STDIN)
  add [triples]
    insert triples (as N-Triples; optionally read from STDIN)
  clear [name]
    remove all triples within the given repository or graph
    if name is provided, the respective graph will be cleared - otherwise the
    current repository will be cleared
EOS
}

while getopts "hir:" option; do
	case $option in
		h)
			usage
			exit 1
			;;
		i)
			include_inferences=true
			;;
		r)
			repo="$OPTARG"
			;;
	esac
done
shift $(($OPTIND - 1)) # drop option arguments

host=${1:?}
shift
cmd=${1:?}
cmd="cmd_$cmd" # avoids reserved names / external commands
shift
args=$@

# commands

cmd_list() {
	case "$@" in
		repos)
			list_repos
			;;
		graphs)
			list_graphs
			;;
		triples)
			list_triples
			;;
		*)
			echo "invalid argument: $@"
			exit 1
			;;
	esac
}

cmd_query() {
	echo "querying: $@"
}

cmd_add() {
	echo "adding: $@"
}

cmd_clear() {
	echo "clearing: $@"
}

# util

list_repos() {
	pysrc='print "\n".join("%s: %s" % (item["id"]["value"], item["title"]["value"]) for item in data["results"]["bindings"])'
	pysrc="import sys; import json; data = json.load(sys.stdin); $pysrc"
	curl -s -H "Accept: application/sparql-results+json" "$host/repositories" | \
			python -c "$pysrc"
}

# dispatch

$cmd $args
